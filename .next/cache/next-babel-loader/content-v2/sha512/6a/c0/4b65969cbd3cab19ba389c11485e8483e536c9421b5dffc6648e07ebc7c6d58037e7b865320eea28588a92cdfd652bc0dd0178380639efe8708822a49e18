{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ailaodev/Desktop/Projects/swizce/src/context/AuthContext.tsx\";\nimport React, { useEffect, useState, createContext } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport Router from \"next/router\";\nimport { MY_INFO } from '../graphql/User';\nconst initialState = {\n  authAction: \"close\",\n  handleAuthAction: () => {},\n  loggedInUser: null,\n  setAuthUser: () => {}\n};\nexport const AuthContext = /*#__PURE__*/createContext(initialState);\n\nconst AuthContextProvider = ({\n  children\n}) => {\n  const {\n    0: authAction,\n    1: setAuthAction\n  } = useState(\"close\");\n  const {\n    0: loggedInUser,\n    1: setLoggedInUser\n  } = useState(null);\n  const {\n    data\n  } = useQuery(MY_INFO);\n  useEffect(() => {\n    if (data !== null && data !== void 0 && data.myInfo) setLoggedInUser(data.myInfo);\n  }, [data === null || data === void 0 ? void 0 : data.myInfo]); // console.log(\"user data: \", data)\n  //Signout sync effect\n\n  useEffect(() => {\n    //create function syncSignout\n    const syncSignout = e => {\n      if (e.key === 'signout') {\n        //Log user out\n        setLoggedInUser(null); //push user to home page\n\n        Router.push('/');\n      }\n    };\n\n    window.addEventListener('storage', syncSignout);\n    return () => window.removeEventListener('storage', syncSignout);\n  }, []);\n\n  const handleAuthAction = action => {\n    setAuthAction(action);\n  };\n\n  const setAuthUser = user => setLoggedInUser(user);\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authAction,\n      handleAuthAction,\n      loggedInUser,\n      setAuthUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\nexport default AuthContextProvider;","map":{"version":3,"sources":["/Users/ailaodev/Desktop/Projects/swizce/src/context/AuthContext.tsx"],"names":["React","useEffect","useState","createContext","useQuery","Router","MY_INFO","initialState","authAction","handleAuthAction","loggedInUser","setAuthUser","AuthContext","AuthContextProvider","children","setAuthAction","setLoggedInUser","data","myInfo","syncSignout","e","key","push","window","addEventListener","removeEventListener","action","user"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,aAArC,QAA0D,OAA1D;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAGA,SAASC,OAAT,QAAwB,iBAAxB;AAiBA,MAAMC,YAA+B,GAAG;AACtCC,EAAAA,UAAU,EAAE,OAD0B;AAEtCC,EAAAA,gBAAgB,EAAE,MAAM,CAAE,CAFY;AAGtCC,EAAAA,YAAY,EAAE,IAHwB;AAItCC,EAAAA,WAAW,EAAE,MAAM,CAAE;AAJiB,CAAxC;AAOA,OAAO,MAAMC,WAAW,gBAAGT,aAAa,CAAoBI,YAApB,CAAjC;;AAEP,MAAMM,mBAAoC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC7D,QAAM;AAAA,OAACN,UAAD;AAAA,OAAaO;AAAb,MAA8Bb,QAAQ,CAAU,OAAV,CAA5C;AACA,QAAM;AAAA,OAACQ,YAAD;AAAA,OAAeM;AAAf,MAAkCd,QAAQ,CAAc,IAAd,CAAhD;AAEA,QAAM;AAAEe,IAAAA;AAAF,MAAWb,QAAQ,CAAiBE,OAAjB,CAAzB;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGgB,IAAH,aAAGA,IAAH,eAAGA,IAAI,CAAEC,MAAT,EAAiBF,eAAe,CAACC,IAAI,CAACC,MAAN,CAAf;AAClB,GAFQ,EAEN,CAACD,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEC,MAAP,CAFM,CAAT,CAN6D,CAU7D;AAEA;;AACAjB,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMkB,WAAW,GAAIC,CAAD,IAAqB;AACvC,UAAGA,CAAC,CAACC,GAAF,KAAU,SAAb,EAAwB;AACtB;AACAL,QAAAA,eAAe,CAAC,IAAD,CAAf,CAFsB,CAItB;;AACAX,QAAAA,MAAM,CAACiB,IAAP,CAAY,GAAZ;AACD;AACF,KARD;;AAUAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCL,WAAnC;AAEA,WAAM,MAAMI,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCN,WAAtC,CAAZ;AACD,GAfQ,EAeN,EAfM,CAAT;;AAiBA,QAAMV,gBAAkC,GAAIiB,MAAD,IAAY;AACrDX,IAAAA,aAAa,CAACW,MAAD,CAAb;AACD,GAFD;;AAIA,QAAMf,WAAW,GAAIgB,IAAD,IAAuBX,eAAe,CAACW,IAAD,CAA1D;;AAEA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLnB,MAAAA,UADK;AAELC,MAAAA,gBAFK;AAGLC,MAAAA,YAHK;AAILC,MAAAA;AAJK,KADT;AAAA,cAQIG;AARJ;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAhDD;;AAkDA,eAAeD,mBAAf","sourcesContent":["import React, { useEffect, useState, createContext } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport Router from \"next/router\";\n\nimport { User } from \"../types\";\nimport { MY_INFO } from '../graphql/User';\n\n\ninterface Props {}\n\ntype Actions = 'signin' | 'signup' | 'request' | 'reset' | 'close' | 'create' | 'create-service';\n\ntype HandleAuthAction = (action: Actions) => void;\n\ninterface AuthContextValues {\n  authAction: Actions\n  handleAuthAction: HandleAuthAction\n  loggedInUser: User | null\n  setAuthUser: (user: User | null) => void\n  \n}\n\nconst initialState: AuthContextValues = {\n  authAction: \"close\",\n  handleAuthAction: () => {},\n  loggedInUser: null,\n  setAuthUser: () => {}\n};\n\nexport const AuthContext = createContext<AuthContextValues>(initialState);\n\nconst AuthContextProvider: React.FC<Props> = ({ children }) => {\n  const [authAction, setAuthAction] = useState<Actions>(\"close\");\n  const [loggedInUser, setLoggedInUser] = useState<User | null>(null);\n\n  const { data } = useQuery<{myInfo: User}>(MY_INFO);\n\n  useEffect(() => {\n    if(data?.myInfo) setLoggedInUser(data.myInfo)\n  }, [data?.myInfo]);\n\n  // console.log(\"user data: \", data)\n\n  //Signout sync effect\n  useEffect(() => {\n    //create function syncSignout\n    const syncSignout = (e: StorageEvent) => {\n      if(e.key === 'signout') {\n        //Log user out\n        setLoggedInUser(null);\n\n        //push user to home page\n        Router.push('/')\n      }\n    }\n\n    window.addEventListener('storage', syncSignout)\n\n    return() => window.removeEventListener('storage', syncSignout)\n  }, [])\n\n  const handleAuthAction: HandleAuthAction = (action) => {\n    setAuthAction(action);\n  };\n\n  const setAuthUser = (user: User | null) => setLoggedInUser(user);\n  \n  return (\n    <AuthContext.Provider\n      value={{ \n        authAction, \n        handleAuthAction, \n        loggedInUser,\n        setAuthUser\n      }}\n    >\n      { children }\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContextProvider;\n"]},"metadata":{},"sourceType":"module"}
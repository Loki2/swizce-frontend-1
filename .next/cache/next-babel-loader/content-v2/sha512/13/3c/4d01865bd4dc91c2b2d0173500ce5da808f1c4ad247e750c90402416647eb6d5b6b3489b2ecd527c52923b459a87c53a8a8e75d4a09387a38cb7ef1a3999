{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/aidev/Documents/Projects/Swizce/swizce-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/aidev/Documents/Projects/Swizce/swizce-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/aidev/Documents/Projects/Swizce/swizce-frontend/src/components/Scream/uploads/UploadItem.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nexport function UploadItems(_ref) {\n  _s();\n\n  var file = _ref.file;\n\n  var _useState = useState(0),\n      progress = _useState[0],\n      setProgress = _useState[1];\n\n  useEffect(function () {\n    function upload() {\n      return _upload.apply(this, arguments);\n    }\n\n    function _upload() {\n      _upload = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var url;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return UploadFile(file, setProgress);\n\n              case 2:\n                url = _context.sent;\n                console.log('url', url);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _upload.apply(this, arguments);\n    }\n\n    upload();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list__upload__item\",\n    children: [\"SFL-\", progress]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n}\n\n_s(UploadItems, \"ZVQpwjU6Dz5R8VBOzPsnxGRmMVo=\");\n\n_c = UploadItems;\n\nfunction UploadFile(file, onProgress) {\n  var url = 'https://api.cloudinary.com/v1_1/swizce/image/upload';\n  var key = 'doc_upload_example_us_preset';\n  return new Promise(function (res, rej) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('POST', url);\n\n    xhr.onload = function () {\n      var resp = JSON.parse(xhr.responseText);\n      res(resp.secure_url);\n    };\n\n    xhr.onerror = function (evt) {\n      return rej(evt);\n    };\n\n    xhr.upload.onprogress = function (event) {\n      if (event.lengthComputable) {\n        var _percentage = event.loaded / event.total * 100;\n\n        onProgress(Math.round(_percentage));\n      }\n    };\n\n    var formData = new FormData();\n    formData.append('file', file);\n    formData.append('keys', key);\n    xhr.send(formData);\n  });\n}\n\n_c2 = UploadFile;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UploadItems\");\n$RefreshReg$(_c2, \"UploadFile\");","map":{"version":3,"sources":["/Users/aidev/Documents/Projects/Swizce/swizce-frontend/src/components/Scream/uploads/UploadItem.tsx"],"names":["React","useEffect","useState","UploadItems","file","progress","setProgress","upload","UploadFile","url","console","log","onProgress","key","Promise","res","rej","xhr","XMLHttpRequest","open","onload","resp","JSON","parse","responseText","secure_url","onerror","evt","onprogress","event","lengthComputable","percentage","loaded","total","Math","round","formData","FormData","append","send"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAOA,OAAO,SAASC,WAAT,OAAgD;AAAA;;AAAA,MAAzBC,IAAyB,QAAzBA,IAAyB;;AAAA,kBACrBF,QAAQ,CAAC,CAAD,CADa;AAAA,MAC9CG,QAD8C;AAAA,MACpCC,WADoC;;AAGrDL,EAAAA,SAAS,CAAC,YAAM;AAAA,aACCM,MADD;AAAA;AAAA;;AAAA;AAAA,yEACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACoBC,UAAU,CAACJ,IAAD,EAAOE,WAAP,CAD9B;;AAAA;AACQG,gBAAAA,GADR;AAGEC,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,GAAnB;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADc;AAAA;AAAA;;AAOdF,IAAAA,MAAM;AACP,GARQ,EAQN,EARM,CAAT;AASA,sBAAO;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,uBACAF,QADA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAGD;;GAfeF,W;;KAAAA,W;;AAiBhB,SAASK,UAAT,CAAoBJ,IAApB,EAAgCQ,UAAhC,EAAyE;AACvE,MAAMH,GAAG,GAAG,qDAAZ;AACA,MAAMI,GAAG,GAAG,8BAAZ;AACA,SAAO,IAAIC,OAAJ,CAAY,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC/B,QAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AACAD,IAAAA,GAAG,CAACE,IAAJ,CAAS,MAAT,EAAiBV,GAAjB;;AAEAQ,IAAAA,GAAG,CAACG,MAAJ,GAAa,YAAM;AACjB,UAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWN,GAAG,CAACO,YAAf,CAAb;AACAT,MAAAA,GAAG,CAACM,IAAI,CAACI,UAAN,CAAH;AACD,KAHD;;AAKAR,IAAAA,GAAG,CAACS,OAAJ,GAAc,UAACC,GAAD;AAAA,aAASX,GAAG,CAACW,GAAD,CAAZ;AAAA,KAAd;;AAEAV,IAAAA,GAAG,CAACV,MAAJ,CAAWqB,UAAX,GAAwB,UAACC,KAAD,EAAW;AACjC,UAAGA,KAAK,CAACC,gBAAT,EAA2B;AACzB,YAAMC,WAAU,GAAIF,KAAK,CAACG,MAAN,GAAaH,KAAK,CAACI,KAApB,GAA6B,GAAhD;;AACArB,QAAAA,UAAU,CAACsB,IAAI,CAACC,KAAL,CAAWJ,WAAX,CAAD,CAAV;AACD;AACF,KALD;;AAOA,QAAMK,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AAEAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBlC,IAAxB;AACAgC,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBzB,GAAxB;AAGAI,IAAAA,GAAG,CAACsB,IAAJ,CAASH,QAAT;AACD,GAzBM,CAAP;AA0BD;;MA7BQ5B,U","sourcesContent":["import React, { useEffect, useState } from \"react\"\n\nexport interface UploadItemsProps {\n  file: File;\n}\n\n\nexport function UploadItems({ file }: UploadItemsProps){\n  const [progress, setProgress] = useState(0)\n\n  useEffect(() => {\n    async function upload() {\n      const url = await UploadFile(file, setProgress);\n\n      console.log('url', url)\n    }\n\n    upload();\n  }, []);\n  return <div className=\"list__upload__item\">\n    SFL-{progress}\n  </div>\n}\n\nfunction UploadFile(file: File, onProgress: (percentage: number) => void){\n  const url = 'https://api.cloudinary.com/v1_1/swizce/image/upload';\n  const key = 'doc_upload_example_us_preset'\n  return new Promise((res, rej) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open('POST', url);\n\n    xhr.onload = () => {\n      const resp = JSON.parse(xhr.responseText);\n      res(resp.secure_url);\n    }\n\n    xhr.onerror = (evt) => rej(evt);\n\n    xhr.upload.onprogress = (event) => {\n      if(event.lengthComputable) {\n        const percentage = (event.loaded/event.total) * 100;\n        onProgress(Math.round(percentage))\n      }\n    }\n\n    const formData = new FormData();\n\n    formData.append('file', file);\n    formData.append('keys', key);\n\n\n    xhr.send(formData)\n  })\n}\n"]},"metadata":{},"sourceType":"module"}
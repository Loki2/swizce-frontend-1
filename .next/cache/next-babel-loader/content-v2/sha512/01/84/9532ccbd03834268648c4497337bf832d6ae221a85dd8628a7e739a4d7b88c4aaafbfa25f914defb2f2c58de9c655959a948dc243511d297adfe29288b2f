{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/ailaodev/Desktop/Projects/swizce/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ailaodev/Desktop/Projects/swizce/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/ailaodev/Desktop/Projects/swizce/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/ailaodev/Desktop/Projects/swizce/src/components/ResetPassword.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { useMutation } from '@apollo/client';\nimport Modal from \"./Modal/Modal\";\nimport { useForm } from 'react-hook-form';\nimport Loader from 'react-loader-spinner';\nimport { RESET_PASSWORD } from '../graphql/User';\nimport { AuthContext } from \"../context/AuthContext\";\n\nvar ResetPassword = function ResetPassword(_ref) {\n  _s();\n\n  var _error$graphQLErrors$, _data$resetPassword;\n\n  var token = _ref.token;\n\n  var _useContext = useContext(AuthContext),\n      handleAuthAction = _useContext.handleAuthAction;\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit;\n\n  var _useMutation = useMutation(RESET_PASSWORD),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      resetPassword = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      data = _useMutation2$.data,\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error;\n\n  var handleSubmitResetPassword = handleSubmit( /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n      var password, confirmpassword;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              password = _ref2.password, confirmpassword = _ref2.confirmpassword;\n              _context.next = 3;\n              return resetPassword({\n                variables: {\n                  token: token,\n                  password: password,\n                  confirmpassword: confirmpassword\n                }\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }());\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reset__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"__header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitResetPassword,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Enter Password *\",\n            autoComplete: \"new-password\",\n            ref: register({\n              required: 'Password is Required...!'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, _this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: styles.errorMessage,\n            role: \"alert\",\n            children: errors.password.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"confirmpassword\",\n            placeholder: \"Confirm Password *\",\n            autoComplete: \"new-password\",\n            ref: register({\n              required: 'Password is Required...!'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, _this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: styles.errorMessage,\n            role: \"alert\",\n            children: errors.confirmpassword.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: loading,\n            style: {\n              cursor: loading ? 'not-allowed' : 'pointer'\n            },\n            type: \"submit\",\n            children: loading ? /*#__PURE__*/_jsxDEV(Loader, {\n              type: \"Oval\",\n              color: \"white\",\n              height: 30,\n              width: 30,\n              timeout: 30000\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 28\n            }, _this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://res.cloudinary.com/swizce/image/upload/v1620702241/Swizce/images/login_qgoycx.png\",\n              width: \"32px\",\n              height: \"32px\",\n              color: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, _this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: ((_error$graphQLErrors$ = error.graphQLErrors[0]) === null || _error$graphQLErrors$ === void 0 ? void 0 : _error$graphQLErrors$.message) || /*#__PURE__*/_jsxDEV(\"p\", {\n              style: styles.errorMessage,\n              children: \"Sorry something went wrong...!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 65\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 24\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, _this), data && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p__forget\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [(_data$resetPassword = data.resetPassword) === null || _data$resetPassword === void 0 ? void 0 : _data$resetPassword.message, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: function onClick() {\n                return handleAuthAction('signin');\n              },\n              children: \"Signin Now!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 48\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, _this);\n}; //Styling page over here\n\n\n_s(ResetPassword, \"Sp5AvP4s5XmrxUc20vhWuHos8Xc=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = ResetPassword;\nvar styles = {\n  errorMessage: {\n    margin: 0,\n    padding: 0,\n    color: \"red\",\n    fontSize: \".7rem\"\n  }\n};\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["/Users/ailaodev/Desktop/Projects/swizce/src/components/ResetPassword.tsx"],"names":["React","useContext","useMutation","Modal","useForm","Loader","RESET_PASSWORD","AuthContext","ResetPassword","token","handleAuthAction","register","errors","handleSubmit","resetPassword","data","loading","error","handleSubmitResetPassword","password","confirmpassword","variables","required","styles","errorMessage","message","cursor","graphQLErrors","margin","padding","color","fontSize"],"mappings":"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","sourcesContent":["import React, {useContext} from \"react\";\nimport { useMutation } from '@apollo/client';\nimport Modal from \"./Modal/Modal\";\nimport { useForm } from 'react-hook-form';\nimport Loader from 'react-loader-spinner';\n\nimport { RESET_PASSWORD } from '../graphql/User';\nimport { AuthContext } from \"../context/AuthContext\";\n\ninterface Props {\n  token: string;\n}\n\nconst ResetPassword: React.FC<Props> = ({ token }) => {\n\n  const { handleAuthAction } = useContext(AuthContext);\n\n  const { register, errors, handleSubmit } = useForm<{ password: string, confirmpassword: string }>();\n\n  const [resetPassword, {data, loading, error}] = useMutation<{\n      resetPassword : {message: string }}, \n      {token: string; password: string; confirmpassword: string;}>(RESET_PASSWORD);\n\n  const handleSubmitResetPassword = handleSubmit( async ({ password, confirmpassword }) => {\n      await resetPassword({ variables: {token, password, confirmpassword}})\n  })\n\n\n  return (\n    <Modal>\n      <div className=\"reset__container\">\n        <div className=\"__header\">\n          <h2>Reset Password</h2>\n        </div>\n\n        <form onSubmit={handleSubmitResetPassword}>\n          <div className=\"form__control\">\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Enter Password *\"\n              autoComplete=\"new-password\"\n              ref={register({\n                required: 'Password is Required...!'\n              })}\n            />\n            {errors.password && <span style={styles.errorMessage} role=\"alert\">{errors.password.message}</span>}\n          </div>\n\n          <div className=\"form__control\">\n            <input\n              type=\"password\"\n              name=\"confirmpassword\"\n              placeholder=\"Confirm Password *\"\n              autoComplete=\"new-password\"\n              ref={register({\n                required: 'Password is Required...!'\n              })}\n            />\n            {errors.password && <span style={styles.errorMessage} role=\"alert\">{errors.confirmpassword.message}</span>}\n          </div>\n\n          <div className=\"form__control\">\n            <button disabled={loading} style={{ cursor: loading ? 'not-allowed' : 'pointer'}} type=\"submit\">\n              {\n                loading ? (<Loader type='Oval' color='white' height={30} width={30} timeout={30000}/>) : (\n                  <img\n                    src=\"https://res.cloudinary.com/swizce/image/upload/v1620702241/Swizce/images/login_qgoycx.png\"\n                    width=\"32px\"\n                    height=\"32px\"\n                    color=\"white\"\n                  />\n                )\n              }\n            </button>\n            {\n              error && <div>{error.graphQLErrors[0]?.message || <p style={styles.errorMessage}>Sorry something went wrong...!</p>}</div>\n            }\n          </div>\n          {\n            data && <div className=\"p__forget\">\n              <p>{data.resetPassword?.message} <span onClick={() => handleAuthAction('signin')}>Signin Now!</span></p>\n            </div>\n          }\n        </form>\n      </div>\n    </Modal>\n  );\n};\n\n\n//Styling page over here\nconst styles = {\n  errorMessage: {\n    margin: 0,\n    padding: 0,\n    color: \"red\",\n    fontSize: \".7rem\",\n  },\n};\n\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}
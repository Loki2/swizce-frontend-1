{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aidev/Documents/Projects/Swizce/swizce-frontend/src/components/Scream/uploads/UploadItem.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nexport function UploadItems(_ref) {\n  _s();\n\n  var file = _ref.file;\n  useEffect(function () {\n    function upload() {\n      var url = UploadFile(file);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list__upload__item\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n}\n\n_s(UploadItems, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = UploadItems;\n\nfunction UploadFile(file, onProgress) {\n  var url = 'CLOUDINARY_URL=cloudinary://761595369837313:f1woOAF91bfMumVPJFq4VzlZmsI@swizce';\n  var key = '761595369837313';\n  return new Promise(function (res, rej) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('POST', url);\n\n    xhr.onload = function () {\n      res('usl - where cloudinary saved file');\n    };\n\n    xhr.onerror = function (evt) {\n      return rej(evt);\n    };\n\n    xhr.upload.onprogress = function (event) {\n      if (event.lengthComputable) {\n        var _percentage = event.loaded / event.total * 100;\n\n        onProgress(Math.round(_percentage));\n      }\n    };\n\n    var formData = new FormData();\n    formData.append('file', file);\n    formData.append('keys', key);\n    xhr.send(formData);\n  });\n}\n\n_c2 = UploadFile;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UploadItems\");\n$RefreshReg$(_c2, \"UploadFile\");","map":{"version":3,"sources":["/Users/aidev/Documents/Projects/Swizce/swizce-frontend/src/components/Scream/uploads/UploadItem.tsx"],"names":["useEffect","UploadItems","file","upload","url","UploadFile","onProgress","key","Promise","res","rej","xhr","XMLHttpRequest","open","onload","onerror","evt","onprogress","event","lengthComputable","percentage","loaded","total","Math","round","formData","FormData","append","send"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AAOA,OAAO,SAASC,WAAT,OAAiD;AAAA;;AAAA,MAAzBC,IAAyB,QAAzBA,IAAyB;AACtDF,EAAAA,SAAS,CAAC,YAAM;AACd,aAASG,MAAT,GAAiB;AACf,UAAMC,GAAG,GAAIC,UAAU,CAACH,IAAD,CAAvB;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;AAKA,sBAAO;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAPeD,W;;KAAAA,W;;AAShB,SAASI,UAAT,CAAoBH,IAApB,EAAgCI,UAAhC,EAAyE;AACvE,MAAMF,GAAG,GAAG,gFAAZ;AACA,MAAMG,GAAG,GAAG,iBAAZ;AACA,SAAO,IAAIC,OAAJ,CAAY,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC/B,QAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AACAD,IAAAA,GAAG,CAACE,IAAJ,CAAS,MAAT,EAAiBT,GAAjB;;AAEAO,IAAAA,GAAG,CAACG,MAAJ,GAAa,YAAM;AACjBL,MAAAA,GAAG,CAAC,mCAAD,CAAH;AACD,KAFD;;AAIAE,IAAAA,GAAG,CAACI,OAAJ,GAAc,UAACC,GAAD;AAAA,aAASN,GAAG,CAACM,GAAD,CAAZ;AAAA,KAAd;;AAEAL,IAAAA,GAAG,CAACR,MAAJ,CAAWc,UAAX,GAAwB,UAACC,KAAD,EAAW;AACjC,UAAGA,KAAK,CAACC,gBAAT,EAA2B;AACzB,YAAMC,WAAU,GAAIF,KAAK,CAACG,MAAN,GAAaH,KAAK,CAACI,KAApB,GAA6B,GAAhD;;AACAhB,QAAAA,UAAU,CAACiB,IAAI,CAACC,KAAL,CAAWJ,WAAX,CAAD,CAAV;AACD;AACF,KALD;;AAOA,QAAMK,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AAEAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBzB,IAAxB;AACAuB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBpB,GAAxB;AAGAI,IAAAA,GAAG,CAACiB,IAAJ,CAASH,QAAT;AACD,GAxBM,CAAP;AAyBD;;MA5BQpB,U","sourcesContent":["import { useEffect } from \"react\"\n\nexport interface UploadItemsProps {\n  file: File[];\n}\n\n\nexport function UploadItems( { file }: UploadItemsProps){\n  useEffect(() => {\n    function upload(){\n      const url =  UploadFile(file)\n    }\n  }, []);\n  return <div className=\"list__upload__item\"></div>\n}\n\nfunction UploadFile(file: File, onProgress: (percentage: number) => void){\n  const url = 'CLOUDINARY_URL=cloudinary://761595369837313:f1woOAF91bfMumVPJFq4VzlZmsI@swizce';\n  const key = '761595369837313'\n  return new Promise((res, rej) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open('POST', url);\n\n    xhr.onload = () => {\n      res('usl - where cloudinary saved file');\n    }\n\n    xhr.onerror = (evt) => rej(evt);\n\n    xhr.upload.onprogress = (event) => {\n      if(event.lengthComputable) {\n        const percentage = (event.loaded/event.total) * 100;\n        onProgress(Math.round(percentage))\n      }\n    }\n\n    const formData = new FormData();\n\n    formData.append('file', file);\n    formData.append('keys', key);\n\n\n    xhr.send(formData)\n  })\n}"]},"metadata":{},"sourceType":"module"}